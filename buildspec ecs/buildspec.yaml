version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - IMAGE_TAG=$CODEBUILD_BUILD_NUMBER
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd pim-app
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG --build-arg AWS_ACCESS_KEY_VALUE=$AWS_ACCESS_KEY_VALUE --build-arg AWS_SECRET_KEY_VALUE=$AWS_SECRET_KEY_VALUE --build-arg AWS_REGION_VALUE=$AWS_REGION_VALUE --build-arg AWS_BUCKET_VALUE=$AWS_BUCKET_VALUE --build-arg DATABASE_URI_VALUE=$DATABASE_URI_VALUE -f Dockerfile .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - IMAGE_TAG=$CODEBUILD_BUILD_NUMBER
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo deploy started
      - ls
      - cd ..
      - ls
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json